1. WAP to Check Prime Number using loop?
============================================================
package test;

import java.util.Scanner;

public class primeno {
	public static void main(String args[])
	{
		System.out.println("Enter The Number");
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int count =0;
		
		for(int i=2; i<n; i++) {
			if(n%i==0)
			count++;
		}
		
		if(count== 0) {
			System.out.println("prime Number");
		}
		else
			System.out.println("Not Prime Number");
	}
}
=============================================================
2. WAP to Check if a Number is Positive or Negative

package test;

import java.util.Scanner;

public class PostitiveAndNegativeNo {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter The Nunber");
		int n = sc.nextInt();
		
		if(n > 0) {
			System.out.println("positive Number");
		}
		else 
		{
			System.out.println("Negative Number");
		}
	}

}
==================================================================
3. WAP to Find Factorial of a number
-->

package test;

import java.util.Scanner;

public class factorial {

	public static void main(String[] args) {
		System.out.println("Enter The Number");
		Scanner sc = new Scanner(System.in);
		
		int n = sc.nextInt();
		int fact=1;
		
		for(int i=n; i>0; i--) {
			fact = fact * i;
		}
		System.out.println(fact);
	}

}
=====================================================
4. WAP to Display Fibonacci series
-->
package test;

import java.util.Scanner;

public class fibo {

	public static void main(String[] args) {
		System.out.println("Enter The Number");
		Scanner sc = new Scanner(System.in);
		
		int n= sc.nextInt();
		int next, i, n1=0,n2=1;
		
		for(i=1; i<=n; i++) {
			System.out.println(n1);
			next=n1+n2;
			n1=n2;
			n2=next;
		}

	}

}
=======================================================
5. WAP to Display Fibonacci series up to a given
number (instead of terms)
Input: 20
Output:0 + 1 + 1 + 2 + 3 + 5 + 8 + 13
-->

